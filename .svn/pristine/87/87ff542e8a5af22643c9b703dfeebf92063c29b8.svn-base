{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Linear Regression\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. 線性迴歸"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 直線\n",
    "\n",
    "$$f(x) = 1.2x + 0.8$$\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.         0.10204082 0.20408163 0.30612245 0.40816327 0.51020408\n",
      " 0.6122449  0.71428571 0.81632653 0.91836735 1.02040816 1.12244898\n",
      " 1.2244898  1.32653061 1.42857143 1.53061224 1.63265306 1.73469388\n",
      " 1.83673469 1.93877551 2.04081633 2.14285714 2.24489796 2.34693878\n",
      " 2.44897959 2.55102041 2.65306122 2.75510204 2.85714286 2.95918367\n",
      " 3.06122449 3.16326531 3.26530612 3.36734694 3.46938776 3.57142857\n",
      " 3.67346939 3.7755102  3.87755102 3.97959184 4.08163265 4.18367347\n",
      " 4.28571429 4.3877551  4.48979592 4.59183673 4.69387755 4.79591837\n",
      " 4.89795918 5.        ]\n"
     ]
    }
   ],
   "source": [
    "#準備 50 個點\n",
    "x = np.linspace(0, 5, 50)\n",
    "print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.8       , 0.92244898, 1.04489796, 1.16734694, 1.28979592,\n",
       "       1.4122449 , 1.53469388, 1.65714286, 1.77959184, 1.90204082,\n",
       "       2.0244898 , 2.14693878, 2.26938776, 2.39183673, 2.51428571,\n",
       "       2.63673469, 2.75918367, 2.88163265, 3.00408163, 3.12653061,\n",
       "       3.24897959, 3.37142857, 3.49387755, 3.61632653, 3.73877551,\n",
       "       3.86122449, 3.98367347, 4.10612245, 4.22857143, 4.35102041,\n",
       "       4.47346939, 4.59591837, 4.71836735, 4.84081633, 4.96326531,\n",
       "       5.08571429, 5.20816327, 5.33061224, 5.45306122, 5.5755102 ,\n",
       "       5.69795918, 5.82040816, 5.94285714, 6.06530612, 6.1877551 ,\n",
       "       6.31020408, 6.43265306, 6.55510204, 6.67755102, 6.8       ])"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y = 1.2*x + 0.8\n",
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0xcfff5f8>]"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#畫圖\n",
    "plt.scatter(x,y)\n",
    "plt.plot(x, 1.2*x+0.8, 'r')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### add noise \n",
    "\n",
    "$$f(x) + \\varepsilon(x)$$\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.69023123 0.63971521 0.92222192 2.02028877 0.75134187 2.2136449\n",
      " 1.49354419 1.4159545  1.90993235 1.9734186  1.42461122 2.74549481\n",
      " 2.72745867 2.79122302 1.63095973 3.50523349 2.91977834 2.46716961\n",
      " 2.62840764 3.65058994 3.6826057  2.67909532 3.39832742 4.63985216\n",
      " 3.65908594 3.70385231 4.37752629 4.86839048 5.1580326  4.39918388\n",
      " 5.67033383 5.04005266 4.2163535  4.46005885 5.37033165 5.38455469\n",
      " 5.61946592 4.98761761 4.8155248  5.76255852 6.13601497 6.35280333\n",
      " 6.36709664 6.33781592 7.01557545 5.62853436 6.28485697 7.79555341\n",
      " 6.28943703 6.76867684]\n"
     ]
    }
   ],
   "source": [
    "y = 1.2*x + 0.8 + 0.6*np.random.randn(50)\n",
    "print(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1d545b51198>]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x,y)\n",
    "plt.plot(x, 1.2*x + 0.8, 'r')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LinearRegression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "regr = LinearRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(50,)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(50, 1)"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(x.shape)\n",
    "X = x.reshape(-1,1)\n",
    "X.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "$$[x_1, x_2, \\ldots, x_{50}]$$\n",
    "\n",
    "==> \n",
    "\n",
    "$$[[x_1], [x_2], \\ldots, [x_{50}]]$$\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,\n",
       "         normalize=False)"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "regr.fit(X,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.68641662 0.80942864 0.93244067 1.05545269 1.17846471 1.30147674\n",
      " 1.42448876 1.54750078 1.67051281 1.79352483 1.91653685 2.03954888\n",
      " 2.1625609  2.28557292 2.40858495 2.53159697 2.65460899 2.77762102\n",
      " 2.90063304 3.02364506 3.14665709 3.26966911 3.39268113 3.51569316\n",
      " 3.63870518 3.7617172  3.88472923 4.00774125 4.13075327 4.2537653\n",
      " 4.37677732 4.49978934 4.62280137 4.74581339 4.86882541 4.99183744\n",
      " 5.11484946 5.23786148 5.36087351 5.48388553 5.60689755 5.72990958\n",
      " 5.8529216  5.97593362 6.09894565 6.22195767 6.34496969 6.46798172\n",
      " 6.59099374 6.71400576]\n"
     ]
    }
   ],
   "source": [
    "Y = regr.predict(X)\n",
    "print(Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'copy_X': True, 'fit_intercept': True, 'n_jobs': None, 'normalize': False}"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#了解你的訓練參數\n",
    "regr.get_params()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.3363104052503425\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x, y)\n",
    "plt.plot(x, Y, 'ro')\n",
    "#calculate mse\n",
    "mse = np.sum((Y-y)**2) / len(y)\n",
    "print(mse)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. 函數訓練and測試\n",
    "\n",
    "#### 訓練資料、測試資料\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "80%  training data, 20%  testing data ==> 先利用此來驗證各種模型(演算法)的好壞及調好到最佳參數\n",
    "之後可以利用由這個80%的訓練資料所得的模型後,拿100%資料re-train模型以得到最佳模型 (此model會更佳fit data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[3.36734694 3.57142857 2.65306122 3.46938776 1.83673469 0.71428571\n",
      " 1.42857143 4.59183673 4.89795918 2.95918367 1.53061224 3.06122449\n",
      " 3.26530612 1.63265306 4.28571429 2.04081633 4.3877551  0.81632653\n",
      " 1.32653061 2.55102041 0.51020408 1.73469388 4.08163265 5.\n",
      " 0.10204082 1.2244898  3.7755102  2.44897959 0.6122449  2.34693878\n",
      " 3.67346939 2.14285714 1.93877551 0.91836735 3.97959184 4.69387755\n",
      " 0.30612245 0.         4.79591837 4.48979592]\n"
     ]
    }
   ],
   "source": [
    "x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=0)\n",
    "print(x_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x132cee973c8>"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x_train, y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 用訓練資料來 fit 函數\n",
    "\n",
    "記得現在我們只用 80% 的資料去訓練。"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Coefficients:  [1.21155023]\n",
      "interception:  0.9231527474364367\n"
     ]
    }
   ],
   "source": [
    "regr = LinearRegression()\n",
    "X_train = x_train.reshape(-1,1)\n",
    "regr.fit(X_train,y_train)\n",
    "print('Coefficients: ', regr.coef_)\n",
    "print('interception: ', regr.intercept_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [],
   "source": [
    "Y_train = regr.predict(X_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.2682869412497076\n"
     ]
    }
   ],
   "source": [
    "mse = np.sum((Y_train-y_train)**2) / len(y_train)\n",
    "print(mse)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x132ceffbf28>]"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x_train, y_train)\n",
    "plt.plot(x_train, Y_train, 'r')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### test with test data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[2.85714286]\n",
      " [1.12244898]\n",
      " [1.02040816]\n",
      " [4.18367347]\n",
      " [0.20408163]\n",
      " [2.75510204]\n",
      " [3.87755102]\n",
      " [3.16326531]\n",
      " [2.24489796]\n",
      " [0.40816327]]\n",
      "[4.38472484 2.28305607 2.15942849 5.99188331 1.1704079  4.26109727\n",
      " 5.62100059 4.75560756 3.64295939 1.41766305]\n"
     ]
    }
   ],
   "source": [
    "X_test = x_test.reshape(-1,1)\n",
    "Y_test = regr.predict(X_test)\n",
    "print(X_test)\n",
    "print(Y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.3146004463248957\n"
     ]
    }
   ],
   "source": [
    "mse = np.sum((Y_test-y_test)**2) / len(y_test)\n",
    "print(mse)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x132cf0562b0>"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x_test, y_test)\n",
    "plt.scatter(x_test, Y_test, c='r')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Nonlinear\n",
    "\n",
    "$$f(x) = \\sin(3.2x) + 0.8x$$\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3. 生成假資料"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "x = np.linspace(0, 5, 100)\n",
    "y = np.sin(3.2*x) + 0.8*x + 0.3*np.random.randn(100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0xd037160>"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x,y)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### nonlinear"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "regr_lin = LinearRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(100, 1)\n"
     ]
    }
   ],
   "source": [
    "X = x.reshape(-1, 1)\n",
    "print(X.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,\n",
       "         normalize=False)"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "regr_lin.fit(X,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.6130313574506662\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "Y=regr_lin.predict(X)\n",
    "plt.scatter(x,y)\n",
    "plt.plot(x,Y , 'r')\n",
    "mse = np.sum((Y-y)**2) / len(y)\n",
    "print(mse)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "果然超級不準, 該如何是好?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 多項式\n",
    "\n",
    "多項式6次方"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(100, 5)\n"
     ]
    }
   ],
   "source": [
    "X_poly = np.array([[k, k**2, k**3, k**4, k**5] for k in x])  # add k**6 to try it\n",
    "print(X_poly.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "regr_poly = LinearRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,\n",
       "         normalize=False)"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "regr_poly.fit(X_poly, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1d54a805518>]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x,y)\n",
    "plt.plot(x, regr_poly.predict(X_poly), 'r')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### RBF\n",
    "\n",
    "$$\\phi_i = e^{-\\| x - c_i \\|^2/2\\sigma^2}$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "def RBF(x, center, sigma):\n",
    "    k = np.exp(-(x - center)**2/(2*sigma**2))\n",
    "    return k"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "sigma = 0.3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_rbf = np.array([[RBF(k, 0.5, sigma), \n",
    "                  RBF(k, 1.5, sigma),\n",
    "                  RBF(k, 2.5, sigma),\n",
    "                  RBF(k, 3.5, sigma),\n",
    "                  RBF(k, 4.5, sigma)] for k in x])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "regr_rbf = LinearRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,\n",
       "         normalize=False)"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "regr_rbf.fit(X_rbf, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1d54a84c940>]"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x,y)\n",
    "plt.plot(x, regr_rbf.predict(X_rbf), 'r')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Comparison"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "Y_lin = regr_lin.predict(X)\n",
    "Y_poly = regr_poly.predict(X_poly)\n",
    "Y_rbf = regr_rbf.predict(X_rbf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x1d54a795470>"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x,y)\n",
    "\n",
    "plt.plot(x, Y_lin, label='linear')\n",
    "plt.plot(x, Y_poly, label='polynomial')\n",
    "plt.plot(x, Y_rbf, label='rbf')\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "## 請計算模型的MSE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.6130313574506662\n"
     ]
    }
   ],
   "source": [
    "print(np.sum((regr_lin.predict(X)-y)**2) / len(y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.5451858610920107\n"
     ]
    }
   ],
   "source": [
    "print(np.sum((regr_poly.predict(X_poly)-y)**2) / len(y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.2708807062593184\n"
     ]
    }
   ],
   "source": [
    "print(np.sum((regr_rbf.predict(X_rbf)-y)**2) / len(y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
